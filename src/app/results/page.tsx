"use client";

import { useState, useEffect } from "react";
import Link from "next/link";
import { Team, AggregatedScore } from "@/types";
import { storageUtils } from "@/utils/storage";

export default function ResultsPage() {
  const [teams, setTeams] = useState<Team[]>([]);
  const [aggregatedScores, setAggregatedScores] = useState<AggregatedScore[]>([]);

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ –æ—Ü–µ–Ω–∫–∏
    const savedTeams = storageUtils.getTeams();
    const savedScores = storageUtils.getAggregatedScores();
    setTeams(savedTeams);
    setAggregatedScores(savedScores);
  }, []);

  const contests = [
    { id: "visit-card", name: "I –∫–æ–Ω–∫—É—Ä—Å. –í–∏–∑–∏—Ç–∫–∞", maxScore: 6 },
    { id: "clinical-case", name: "II –∫–æ–Ω–∫—É—Ä—Å. –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–π —Å–ª—É—á–∞–π", maxScore: 4 },
    { id: "practical-skills", name: "III –∫–æ–Ω–∫—É—Ä—Å. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏", maxScore: 48 },
    { id: "mind-battle", name: "IV –∫–æ–Ω–∫—É—Ä—Å. –ë–∏—Ç–≤–∞ —É–º–æ–≤", maxScore: 2 },
    { id: "jury-question", name: "VI –∫–æ–Ω–∫—É—Ä—Å. –í–æ–ø—Ä–æ—Å –æ—Ç –∂—é—Ä–∏", maxScore: 2 },
  ];

  const getTeamScore = (teamId: string, contestId: string) => {
    return storageUtils.getAggregatedScore(teamId, contestId);
  };

  const getTeamTotalScore = (teamId: string) => {
    return storageUtils.getTeamTotalScore(teamId);
  };

  const getTeamAggregatedScore = (teamId: string, contestId: string): AggregatedScore | undefined => {
    return aggregatedScores.find(s => s.teamId === teamId && s.contestId === contestId);
  };

  const sortedTeams = [...teams].sort((a, b) => {
    const scoreA = getTeamTotalScore(a.id);
    const scoreB = getTeamTotalScore(b.id);
    return scoreB - scoreA;
  });

  const getPlaceColor = (place: number) => {
    switch (place) {
      case 1: return "bg-yellow-100 border-yellow-400";
      case 2: return "bg-gray-100 border-gray-400";
      case 3: return "bg-orange-100 border-orange-400";
      default: return "bg-white border-gray-200";
    }
  };

  const getPlaceBadge = (place: number) => {
    switch (place) {
      case 1: return "ü•á";
      case 2: return "ü•à";
      case 3: return "ü•â";
      default: return `${place}`;
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        <header className="mb-8">
          <div className="flex justify-between items-center">
            <h1 className="text-3xl font-bold text-gray-900">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ª–∏–º–ø–∏–∞–¥—ã</h1>
            <Link href="/" className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
              –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Link>
          </div>
        </header>

        {/* –û–±—â–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
        <div className="bg-white rounded-lg shadow-lg p-6 mb-8">
          <h2 className="text-2xl font-semibold text-gray-800 mb-6">–û–±—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</h2>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="border-b-2 border-gray-200">
                  <th className="text-left py-3 px-4">–ú–µ—Å—Ç–æ</th>
                  <th className="text-left py-3 px-4">–ö–æ–º–∞–Ω–¥–∞</th>
                  <th className="text-left py-3 px-4">–£—á–∞—Å—Ç–Ω–∏–∫–∏</th>
                  <th className="text-center py-3 px-4">–û–±—â–∏–π –±–∞–ª–ª</th>
                </tr>
              </thead>
              <tbody>
                {sortedTeams.map((team, index) => (
                  <tr key={team.id} className={`border-b ${getPlaceColor(index + 1)}`}>
                    <td className="py-3 px-4 font-bold text-lg">
                      {getPlaceBadge(index + 1)}
                    </td>
                    <td className="py-3 px-4 font-semibold">{team.name}</td>
                    <td className="py-3 px-4 text-sm text-gray-600">
                      {team.members.join(", ")}
                    </td>
                    <td className="py-3 px-4 text-center font-bold text-lg">
                      {getTeamTotalScore(team.id)}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ø–æ –∫–æ–Ω–∫—É—Ä—Å–∞–º */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h2 className="text-2xl font-semibold text-gray-800 mb-6">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–æ–Ω–∫—É—Ä—Å–∞–º</h2>
          <div className="mb-4 p-3 bg-blue-50 rounded-lg">
            <p className="text-sm text-blue-800">
              üí° <strong>–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–¥—Å—á–µ—Ç:</strong> –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –æ—Ç –≤—Å–µ—Ö —á–ª–µ–Ω–æ–≤ –∂—é—Ä–∏, –æ—Ü–µ–Ω–∏–≤—à–∏—Ö –∫–æ–º–∞–Ω–¥—É.
              –ù–∞–≤–µ–¥–∏—Ç–µ –Ω–∞ –æ—Ü–µ–Ω–∫—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–æ–∫ —É–∫–∞–∑–∞–Ω–æ –≤ —Å–∫–æ–±–∫–∞—Ö.
            </p>
          </div>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="border-b-2 border-gray-200">
                  <th className="text-left py-3 px-4">–ö–æ–º–∞–Ω–¥–∞</th>
                  {contests.map((contest) => (
                    <th key={contest.id} className="text-center py-3 px-2 text-sm">
                      <div>{contest.name}</div>
                      <div className="text-gray-500">–º–∞–∫—Å. {contest.maxScore}</div>
                    </th>
                  ))}
                  <th className="text-center py-3 px-4 font-bold">–ò—Ç–æ–≥–æ</th>
                </tr>
              </thead>
              <tbody>
                {sortedTeams.map((team) => (
                  <tr key={team.id} className="border-b hover:bg-gray-50">
                    <td className="py-3 px-4 font-semibold">{team.name}</td>
                    {contests.map((contest) => {
                      const aggregatedScore = getTeamAggregatedScore(team.id, contest.id);
                      const score = getTeamScore(team.id, contest.id);
                      
                      return (
                        <td key={contest.id} className="text-center py-3 px-2">
                          <div className="relative group">
                            <span className={`inline-block px-2 py-1 rounded text-sm font-medium cursor-help ${
                              score > 0
                                ? aggregatedScore && aggregatedScore.juryScores.length >= 3
                                  ? 'bg-green-100 text-green-800'
                                  : 'bg-yellow-100 text-yellow-800'
                                : 'bg-gray-100 text-gray-600'
                            }`}>
                              {score}
                              {aggregatedScore && (
                                <span className="ml-1 text-xs opacity-75">
                                  ({aggregatedScore.juryScores.length})
                                </span>
                              )}
                            </span>
                            
                            {aggregatedScore && aggregatedScore.juryScores.length > 0 && (
                              <div className="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 w-56 bg-gray-800 text-white text-xs rounded p-2 opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none z-10">
                                <div className="font-semibold mb-1">–û—Ü–µ–Ω–∫–∏ –∂—é—Ä–∏ ({aggregatedScore.juryScores.length} –∏–∑ 6):</div>
                                {aggregatedScore.juryScores.map((juryScore, index) => (
                                  <div key={index} className="flex justify-between">
                                    <span className="truncate mr-2">{juryScore.juryName}:</span>
                                    <span>{juryScore.score}</span>
                                  </div>
                                ))}
                                <div className="mt-1 pt-1 border-t border-gray-600 flex justify-between font-semibold">
                                  <span>–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª:</span>
                                  <span>{aggregatedScore.averageScore}</span>
                                </div>
                                {aggregatedScore.juryScores.length < 3 && (
                                  <div className="mt-1 text-yellow-300 text-xs">
                                    ‚ö†Ô∏è –û—Ü–µ–Ω–µ–Ω–æ –º–µ–Ω–µ–µ —á–µ–º 3 —á–ª–µ–Ω–∞–º–∏ –∂—é—Ä–∏
                                  </div>
                                )}
                              </div>
                            )}
                          </div>
                        </td>
                      );
                    })}
                    <td className="text-center py-3 px-4 font-bold text-lg">
                      {getTeamTotalScore(team.id)}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–≥—Ä–∞–¥–∞—Ö */}
        <div className="mt-8 bg-blue-50 rounded-lg p-6">
          <h2 className="text-2xl font-semibold text-blue-800 mb-4">–ù–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ</h2>
          <div className="text-gray-700">
            <h3 className="font-semibold mb-2">–ö–æ–º–∞–Ω–¥–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:</h3>
            <ul className="space-y-1 text-sm">
              <li>ü•á 1 –º–µ—Å—Ç–æ - –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç —ç–∫–∑–∞–º–µ–Ω–∞ —Å –æ—Ü–µ–Ω–∫–æ–π "–æ—Ç–ª–∏—á–Ω–æ"</li>
              <li>ü•à 2 –º–µ—Å—Ç–æ - +1 –±–∞–ª–ª –∫ —ç–∫–∑–∞–º–µ–Ω—É</li>
              <li>ü•â 3 –º–µ—Å—Ç–æ - +1 –±–∞–ª–ª –∫ —ç–∫–∑–∞–º–µ–Ω—É</li>
              <li>üé¨ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å –∫–æ–Ω–∫—É—Ä—Å–∞ "–í–∏–∑–∏—Ç–∫–∞" - +1 –±–∞–ª–ª –∫ —ç–∫–∑–∞–º–µ–Ω—É</li>
            </ul>
          </div>
        </div>

        {/* –õ–µ–≥–µ–Ω–¥–∞ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –æ—Ü–µ–Ω–æ–∫ */}
        <div className="mt-6 bg-gray-50 rounded-lg p-4">
          <h3 className="text-lg font-semibold text-gray-800 mb-3">–õ–µ–≥–µ–Ω–¥–∞ –æ—Ü–µ–Ω–æ–∫:</h3>
          <div className="grid md:grid-cols-3 gap-4 text-sm">
            <div className="flex items-center">
              <span className="inline-block w-4 h-4 bg-green-100 border border-green-300 rounded mr-2"></span>
              <span className="text-gray-700">–ó–µ–ª–µ–Ω—ã–π - –æ—Ü–µ–Ω–µ–Ω–æ 3+ —á–ª–µ–Ω–∞–º–∏ –∂—é—Ä–∏</span>
            </div>
            <div className="flex items-center">
              <span className="inline-block w-4 h-4 bg-yellow-100 border border-yellow-300 rounded mr-2"></span>
              <span className="text-gray-700">–ñ–µ–ª—Ç—ã–π - –æ—Ü–µ–Ω–µ–Ω–æ –º–µ–Ω–µ–µ 3 —á–ª–µ–Ω–∞–º–∏ –∂—é—Ä–∏</span>
            </div>
            <div className="flex items-center">
              <span className="inline-block w-4 h-4 bg-gray-100 border border-gray-300 rounded mr-2"></span>
              <span className="text-gray-700">–°–µ—Ä—ã–π - –µ—â–µ –Ω–µ –æ—Ü–µ–Ω–µ–Ω–æ</span>
            </div>
          </div>
          <p className="text-xs text-gray-500 mt-2">
            *–ß–∏—Å–ª–æ –≤ —Å–∫–æ–±–∫–∞—Ö –ø–æ—Å–ª–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ —á–ª–µ–Ω–æ–≤ –∂—é—Ä–∏ –æ—Ü–µ–Ω–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É
          </p>
        </div>

        <div className="mt-6 text-center">
          <Link
            href="/admin"
            className="bg-gray-800 text-white px-6 py-3 rounded-lg hover:bg-gray-900"
          >
            –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø–∞–Ω–µ–ª—å –∂—é—Ä–∏
          </Link>
        </div>
      </div>
    </div>
  );
}